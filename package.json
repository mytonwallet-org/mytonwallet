{
  "name": "mytonwallet",
  "version": "3.0.33",
  "description": "The most feature-rich web wallet and browser extension for TON â€“ with support of multi-accounts, tokens (jettons), NFT, TON DNS, TON Sites, TON Proxy, and TON Magic.",
  "main": "index.js",
  "scripts": {
    "dev": "cross-env APP_ENV=development webpack serve --mode development",
    "build": "webpack && bash ./deploy/copy_to_dist.sh",
    "build:dev": "APP_ENV=development webpack --mode development && bash ./deploy/copy_to_dist.sh",
    "build:staging": "cross-env APP_ENV=staging npm run build",
    "build:production": "npm run build",
    "extension:dev": "cross-env IS_EXTENSION=1 npm run build:dev",
    "extension-chrome:package": "cross-env IS_EXTENSION=1 webpack && bash ./deploy/package_extension.sh chrome",
    "extension-chrome:package:staging": "APP_ENV=staging npm run extension-chrome:package",
    "extension-chrome:package:production": "npm run extension-chrome:package",
    "extension-firefox:package": "cross-env IS_FIREFOX_EXTENSION=1 IS_EXTENSION=1 webpack && bash ./deploy/package_extension.sh firefox",
    "extension-firefox:package:staging": "cross-env APP_ENV=staging npm run extension-firefox:package",
    "extension-firefox:package:production": "npm run extension-firefox:package",
    "extension-opera:package": "cross-env IS_OPERA_EXTENSION=1 IS_EXTENSION=1 webpack && bash ./deploy/package_extension.sh opera",
    "extension-opera:package:staging": "cross-env APP_ENV=staging npm run extension-opera:package",
    "extension-opera:package:production": "npm run extension-opera:package",
    "electron:dev": "npm run electron:webpack && IS_PACKAGED_ELECTRON=1 concurrently -n main,renderer,electron \"npm run electron:webpack -- --watch\" \"npm run dev\" \"electronmon dist/electron\"",
    "electron:webpack": "cross-env APP_ENV=$ENV webpack --config ./webpack-electron.config.ts",
    "electron:build": "IS_PACKAGED_ELECTRON=1 npm run build:$ENV && electron-builder install-app-deps && electron-rebuild && ENV=$ENV npm run electron:webpack",
    "electron:package": "npm run electron:build && npx rimraf dist-electron && electron-builder build --win --mac --linux --config src/electron/config.yml",
    "electron:package:staging": "ENV=staging npm run electron:package -- -p never",
    "electron:release:production": "ENV=production npm run electron:package -- -p always",
    "mobile:build": "IS_CAPACITOR=1 npm run build && cap sync",
    "mobile:build:dev": "cross-env APP_ENV=development npm run mobile:build",
    "mobile:build:staging": "cross-env APP_ENV=staging npm run mobile:build",
    "mobile:build:production": "npm run mobile:build",
    "mobile:run:android": "npm run mobile:build:dev && cap run android",
    "mobile:run:ios": "npm run mobile:build:dev && cap run ios",
    "build:icons": "fantasticon",
    "check": "tsc && stylelint \"**/*.{css,scss}\" && eslint . --ext .ts,.tsx",
    "check:fix": "npm run check -- --fix",
    "test": "cross-env APP_ENV=test jest --verbose --forceExit",
    "test:playwright": "playwright test",
    "test:record": "playwright codegen localhost:1235",
    "prepare": "husky",
    "statoscope:validate-diff": "statoscope validate --input input.json --reference reference.json",
    "postversion": "./deploy/postversion.sh",
    "giveaways:build": "webpack --config ./webpack-giveaways.config.ts && bash ./deploy/copy_to_dist.sh dist-giveaways",
    "giveaways:build:dev": "APP_ENV=development webpack --mode development --config ./webpack-giveaways.config.ts && bash ./deploy/copy_to_dist.sh dist-giveaways",
    "giveaways:dev": "APP_ENV=development webpack serve --mode development --port 4322 --config ./webpack-giveaways.config.ts"
  },
  "engines": {
    "node": "^22",
    "npm": "^10"
  },
  "husky": {
    "hooks": {
      "pre-commit": "tsc && lint-staged"
    }
  },
  "lint-staged": {
    "*.{ts,tsx,js}": "eslint --fix",
    "*.{css,scss}": "stylelint --fix"
  },
  "author": "MyTonWallet",
  "license": "GPL-3.0-or-later",
  "protocols": [
    {
      "name": "Ton",
      "schemes": [
        "ton"
      ]
    },
    {
      "name": "TonConnect",
      "schemes": [
        "tc",
        "mytonwallet-tc"
      ]
    },
    {
      "name": "MyTonWallet",
      "schemes": [
        "mtw"
      ]
    }
  ],
  "devDependencies": {
    "@babel/core": "7.25.7",
    "@babel/plugin-proposal-class-properties": "7.18.6",
    "@babel/plugin-proposal-logical-assignment-operators": "7.20.7",
    "@babel/plugin-proposal-nullish-coalescing-operator": "7.18.6",
    "@babel/plugin-syntax-nullish-coalescing-operator": "7.8.3",
    "@babel/preset-env": "7.25.7",
    "@babel/preset-react": "7.25.7",
    "@babel/preset-typescript": "7.25.7",
    "@babel/register": "7.25.7",
    "@capacitor/cli": "6.1.2",
    "@electron/rebuild": "3.7.0",
    "@peculiar/webcrypto": "1.5.0",
    "@playwright/test": "1.48.0",
    "@statoscope/cli": "5.28.2",
    "@statoscope/webpack-plugin": "5.28.2",
    "@testing-library/jest-dom": "6.5.0",
    "@tonconnect/protocol": "2.2.6",
    "@types/bip39": "3.0.0",
    "@types/chrome": "0.0.277",
    "@types/create-hmac": "1.1.3",
    "@types/jest": "29.5.13",
    "@types/js-yaml": "4.0.9",
    "@types/node": "22.7.5",
    "@types/react": "18.3.11",
    "@types/react-dom": "18.3.0",
    "@types/sha256": "0.2.2",
    "@types/webextension-polyfill": "0.12.1",
    "@types/webpack": "5.28.5",
    "@types/webpack-bundle-analyzer": "4.7.0",
    "@types/webpack-dev-server": "4.7.2",
    "@typescript-eslint/eslint-plugin": "5.62.0",
    "@typescript-eslint/parser": "5.62.0",
    "@vue/preload-webpack-plugin": "2.0.0",
    "@webpack-cli/serve": "2.0.5",
    "autoprefixer": "10.4.20",
    "babel-loader": "9.2.1",
    "before-build-webpack": "0.2.15",
    "browserlist": "1.0.1",
    "concurrently": "7.6.0",
    "copy-webpack-plugin": "12.0.2",
    "cross-env": "7.0.3",
    "css-loader": "6.8.1",
    "css-minimizer-webpack-plugin": "7.0.0",
    "dotenv": "16.4.5",
    "electron": "30.5.1",
    "electron-builder": "25.1.7",
    "electron-context-menu": "4.0.4",
    "electron-store": "8.2.0",
    "electron-updater": "6.3.9",
    "electron-window-state": "5.0.3",
    "electronmon": "2.0.3",
    "eslint": "8.57.0",
    "eslint-config-airbnb": "19.0.4",
    "eslint-config-airbnb-typescript": "17.0.0",
    "eslint-config-react-app": "7.0.1",
    "eslint-import-resolver-webpack": "0.13.9",
    "eslint-plugin-flowtype": "8.0.3",
    "eslint-plugin-import": "2.30.0",
    "eslint-plugin-jsx-a11y": "6.10.0",
    "eslint-plugin-jsx-expressions": "1.3.2",
    "eslint-plugin-no-async-without-await": "1.2.0",
    "eslint-plugin-no-null": "1.0.2",
    "eslint-plugin-react": "7.36.0",
    "eslint-plugin-react-hooks": "4.6.2",
    "eslint-plugin-react-hooks-static-deps": "1.0.7",
    "eslint-plugin-simple-import-sort": "10.0.0",
    "eslint-plugin-teactn": "git+https://github.com/korenskoy/eslint-plugin-teactn#c2c39dd005d58c07c24c4361de804dce1c6261b5",
    "fantasticon": "3.0.0",
    "git-revision-webpack-plugin": "5.0.0",
    "html-webpack-plugin": "5.6.0",
    "husky": "9.1.6",
    "jest": "29.7.0",
    "jest-raw-loader": "1.0.1",
    "js-yaml": "4.1.0",
    "lint-staged": "15.2.10",
    "mini-css-extract-plugin": "2.9.1",
    "postcss": "8.4.47",
    "postcss-loader": "8.1.1",
    "postcss-modules": "6.0.0",
    "replace-in-file": "8.2.0",
    "sass": "1.79.4",
    "sass-loader": "16.0.2",
    "script-loader": "0.7.2",
    "serve": "14.2.3",
    "stylelint": "14.16.1",
    "stylelint-config-clean-order": "0.8.0",
    "stylelint-config-recommended-scss": "8.0.0",
    "stylelint-declaration-block-no-ignored-properties": "2.7.0",
    "stylelint-group-selectors": "1.0.10",
    "stylelint-high-performance-animation": "1.8.0",
    "stylelint-order": "5.0.0",
    "typescript": "5.6.3",
    "webpack": "5.95.0",
    "webpack-dev-server": "5.1.0"
  },
  "dependencies": {
    "@awesome-cordova-plugins/core": "6.9.0",
    "@awesome-cordova-plugins/in-app-browser": "6.9.0",
    "@capacitor-mlkit/barcode-scanning": "6.2.0",
    "@capacitor/android": "6.1.2",
    "@capacitor/app": "6.0.1",
    "@capacitor/app-launcher": "6.0.2",
    "@capacitor/clipboard": "6.0.1",
    "@capacitor/core": "6.1.2",
    "@capacitor/haptics": "6.0.1",
    "@capacitor/ios": "6.1.2",
    "@capgo/capacitor-native-biometric": "github:mytonwallet-org/capacitor-native-biometric#956d06d1ab78a839f1293921d0bff449edf4ef4d",
    "@capgo/native-audio": "6.4.21",
    "@ledgerhq/hw-transport-webhid": "6.29.4",
    "@ledgerhq/hw-transport-webusb": "6.29.4",
    "@mauricewegner/capacitor-navigation-bar": "github:mytonwallet-org/capacitor-navigation-bar#0d0af23c191f86819a01c0665c1592774c66a91a",
    "@sina_kh/mtw-capacitor-splash-screen": "6.0.2-2",
    "@sina_kh/mtw-capacitor-status-bar": "6.0.1-2",
    "@ton-community/ton-ledger": "7.2.0-pre.3",
    "@ton/core": "0.59.0",
    "@ton/ton": "github:mytonwallet-org/tonkeeper-ton#0d0fe1cd7ccfe1b87c1083b157a158aa0f50cda8",
    "@tonconnect/sdk": "3.0.5",
    "bip39": "3.1.0",
    "buffer": "6.0.3",
    "capacitor-native-settings": "6.0.1",
    "capacitor-plugin-safe-area": "3.0.3",
    "capacitor-secure-storage-plugin": "github:mytonwallet-org/capacitor-secure-storage-plugin#03a96f6c0e7207b302b1dcb2d13c0c9e2ae6cc29",
    "cordova-plugin-inappbrowser": "github:mytonwalletorg/cordova-plugin-inappbrowser#c585b61d05f5bef7bc0920158db7e4febf48a9ca",
    "create-hmac": "1.1.7",
    "dexie": "4.0.8",
    "idb-keyval": "6.2.1",
    "native-bottom-sheet": "file:mobile/plugins/native-bottom-sheet",
    "native-dialog": "file:mobile/plugins/native-dialog",
    "pako": "2.1.0",
    "process": "^0.11.10",
    "qr-code-styling": "github:mytonwallet-org/qr-code-styling#8d56b409da29122a92da2767d049b45b1bc24db2",
    "qrcode-generator": "1.4.4",
    "stream-browserify": "3.0.0",
    "tonapi-sdk-js": "2.0.3",
    "tonweb-mnemonic": "1.0.1",
    "tronweb": "6.0.0",
    "tweetnacl": "1.0.3",
    "v8-compile-cache": "2.4.0",
    "webextension-polyfill": "0.12.0"
  }
}
